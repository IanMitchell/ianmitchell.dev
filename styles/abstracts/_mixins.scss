@mixin dark-mode {
  @media (prefers-color-scheme: dark) {
    @content;
  }

  .dark-mode & {
    @content
  }
}

@mixin bottom-border-separator($width:40%) {
  &:after {
    display: block;
    width: $width;
    content: '';
    border: 2px solid var(--light);
    @content;
  }
}

// https://www.viget.com/articles/angled-edges-with-css-masks-and-transforms/
@mixin angled-border($pseudo, $angle: 1.5deg, $flip: false) {
  // Possible values for $pseudo are: before, after, both
  @if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {
    position: relative;
    z-index: 1;
    $selector: if($pseudo == 'both', '&:before,&:after', '&:#{$pseudo}');

    #{$selector} {
      background: inherit;
      content: '';
      display: block;
      height: 50%;
      left: 0;
      position: absolute;
      right: 0;
      z-index: -1;
    }

    @if $pseudo == 'before' {
      #{$selector} {
        top: 0;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 100% 0;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        }
      }
    }

    @if $pseudo == 'after' {
      #{$selector} {
        bottom: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        } @else {

          transform: skewY($angle);
          transform-origin: 0 100%;
        }
      }
    }

    @if $pseudo == 'both' {
      &:before {
        top: 0;

        @if $flip {

          transform: skewY($angle);
          transform-origin: 100% 0;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        }
      }

      &:after {
        bottom: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        } @else {
          transform: skewY($angle);
          transform-origin: 0 0;
        }
      }
    }
  }
}
